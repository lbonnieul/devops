services:
    backend: #the image for the java api
        build:
          context: ./backend #the path to the folder for the backend files
          dockerfile: Dockerfile #path of the backend Dockerfile
        env_file: ".env"
        networks: #networks to be connected to (to communicate with other containers)
        - network-back-db
        - network-front-back 
        depends_on:
        - database #because the backend needs the database to be up before uping

    database: #the image for the postgres database
        build:
          context: ./database #the path to the folder for the database files
          dockerfile: Dockerfile #path of the database Dockerfile
        environment: #env variables
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        networks:
        - network-back-db #networks to be connected to (to communicate with other containers)
        volumes:
        - volume:/var/lib/postgresql/data #volume for data persistence

    proxy: #the image for the proxy (reverse proxy apache server)
        build:
          context: ./proxy #the path to the folder for the proxy files
          dockerfile: Dockerfile #path of the proxy Dockerfile
        ports: 
        - 80:80 #port mapping for apache
        networks:
        - network-front-back #networks to be connected to (to communicate with other containers)
        depends_on:
        - backend #because the proxy needs the backend to be up before uping

networks:
    network-back-db:
    network-front-back:

volumes:
    volume:
